---
# Webserver
#
# If your usage of PHP is tied to a web server (e.g. Apache or Nginx), leave
# this default value. If you are using PHP server-side or to run some small
# application, set this value to false so this role doesn't attempt to interact
# with a web server.
#
#php_webserver_daemon: false

vagrant_ip: 1.3.3.7
vagrant_host_ip: 1.3.3.1

# Acquia Cloud uses Ubuntu 12.04 LTS.
vagrant_box: geerlingguy/ubuntu1204

# Acquia Cloud defaults to PHP 5.6.
php_version: "5.6"
php_packages:
  - php5
  - php5-mcrypt
  - php5-cli
  - php5-common
  - php5-curl
  - php5-dev
  - php5-fpm
  - php5-gd
  - php5-sqlite
  - php-pear
  - libpcre3-dev
php_conf_paths:
  - /etc/php5/fpm
  - /etc/php5/apache2
  - /etc/php5/cli
php_extension_conf_paths:
  - /etc/php5/fpm/conf.d
  - /etc/php5/apache2/conf.d
  - /etc/php5/cli/conf.d
php_fpm_daemon: php5-fpm
php_fpm_conf_path: "/etc/php5/fpm"
php_fpm_pool_conf_path: "/etc/php5/fpm/pool.d/www.conf"
php_mysql_package: php5-mysql

# Acquia Cloud Search defaults to Solr 4.x.
solr_version: "4.5.1"
installed_extras:
  - solr
  - xdebug
  - memcached
  - nodejs

# Overrides #

php_memory_limit: "384M"
php_max_execution_time: 90

#
# NOTE: DO NOT USE A '.' IN THE SITE NAME. e.g., test.dev
#
vagrant_synced_folders:
    # Bassmaster - Drupal 7 - Atrium
  - local_path: /opt/drupal-vm/sites/bassmaster
    destination: /opt/drupal-vm/sites/bassmaster
    type: nfs
    excluded_paths: [".idea/"]
    create: true

vagrant_memory: 4096
vagrant_cpus: 4

### STOPS INITIAL INSTALL OF A DRUPAL SITE ###

# Set this to 'true' and 'build_makefile', 'build_composer' to 'false' if you
# are using Composer's create-project as a site deployment strategy.
build_composer_project: false
# Set this to 'false' if you don't need to install drupal (using the drupal_*
# settings below), but instead copy down a database (e.g. using drush sql-sync).
install_site: false

### END ###

extra_packages:
  - unzip

# User drush 7 for Drupal 7.
drush_version: "7.2.0"

post_provision_scripts:
  # - "post_provision_scripts/bash.sh"
  # - "../examples/scripts/configure-solr.sh"

php_xdebug_default_enable: 1
# This needs to be set, not sure this will actually set this in: /etc/php5/conf.d/xdebug.ini on provision.
php_xdebug_remote_autostart: 1
## Additions ##

# Variables for Bassmaster.
bass_server: bassmaster.dev
bass_root: /opt/drupal-vm/sites/bassmaster/build/html

# Apache VirtualHosts. Add one for each site you are running inside the VM. For
# multisite deployments, you can point multiple servernames at one documentroot.
# View the geerlingguy.apache Ansible Role README for more options.
apache_vhosts:
  - servername: "{{ drupal_domain }}"
    serveralias: "www.{{ drupal_domain }}"
    documentroot: "{{ drupal_core_path }}"
    extra_parameters: |
          ProxyPassMatch ^/(.*\.php(/.*)?)$ "fcgi://127.0.0.1:9000{{ drupal_core_path }}"

  - servername: "adminer.{{ vagrant_hostname }}"
    documentroot: "{{ adminer_install_dir }}"
    extra_parameters: |
          ProxyPassMatch ^/(.*\.php(/.*)?)$ "fcgi://127.0.0.1:9000{{ adminer_install_dir }}"

  - servername: "xhprof.{{ vagrant_hostname }}"
    documentroot: "{{ php_xhprof_html_dir }}"
    extra_parameters: |
          ProxyPassMatch ^/(.*\.php(/.*)?)$ "fcgi://127.0.0.1:9000{{ php_xhprof_html_dir }}"

  - servername: "pimpmylog.{{ vagrant_hostname }}"
    documentroot: "{{ pimpmylog_install_dir }}"
    extra_parameters: |
          ProxyPassMatch ^/(.*\.php(/.*)?)$ "fcgi://127.0.0.1:9000{{ pimpmylog_install_dir }}"

  - servername: "{{ vagrant_ip }}"
    serveralias: "dashboard.{{ vagrant_hostname }}"
    documentroot: "{{ dashboard_install_dir }}"
    extra_parameters: |
          ProxyPassMatch ^/(.*\.php(/.*)?)$ "fcgi://127.0.0.1:9000{{ dashboard_install_dir }}"
          DirectoryIndex index.html

  - servername: "{{ bass_server }}"
    serveralias: "{{ bass_server }}"
    documentroot: "{{ bass_root }}"
    extra_parameters: |
          ProxyPassMatch ^/(.*\.php(/.*)?)$ "fcgi://127.0.0.1:9000{{ bass_root }}"

apache_remove_default_vhost: true
apache_mods_enabled:
  - expires.load
  - ssl.load
  - rewrite.load
  - proxy.load
  - proxy_fcgi.load
